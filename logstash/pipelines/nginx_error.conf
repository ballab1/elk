
input {
  pipeline { address => nginx_error }
}

# <188>Nov 20 22:06:33 nginx.s3.home nginx_error: 2020/11/20 22:06:33 [warn] 1055#1055: *37889 send() to syslog failed while logging request, client: 10.3.1.131, server: default, request: "GET /nagios/cgi-bin/status.cgi?servicegroup=DRIVES&style=detail HTTP/1.1", upstream: "http://172.31.1.9:80/nagios/cgi-bin/status.cgi?servicegroup=DRIVES&style=detail", host: "s3.ubuntu.home", referrer: "https://s3.ubuntu.home/nagios/cgi-bin/status.cgi?servicegroup=DRIVES&style=detail"
# <187>Nov 28 08:32:05 nagios.s3.home nginx_error: 2020/11/28 08:32:05 [error] 4857#4857: send() failed (111: Connection refused)

filter {
  if [message] =~ /nginx_error:/ { 
    mutate {
      replace => { "type" => "nginx" }
      remove_field => [ "msg1" ]
      add_tag => [ "_nginxerror" ]
    }


    if "" in [nginx_message] {
      grok {
        match =>  { "nginx_message" => "%{NGINXERRMSG:nginx_errmsg}, %{GREEDYDATA:nginx_errparams}" } 
      }
      if "_grokparsefailure" in [tags] {
        mutate {
          remove_tag => [ "_grokparsefailure" ]
          replace => { "syslog_message" => "%{nginx_message}" } 
        }
      }
      mutate { remove_field => [ "nginx_message" ] }
    }

    if "" in [nginx_errparams] {
      kv {
        add_tag => [ "_kv" ]
        field_split => ", "
        value_split => ":"
        source => [nginx_errparams]
        prefix => "nginx."
      }
      mutate { remove_field => [ "nginx_errparams" ] }
    }
    
    if "" in [nginx_errmsg] {
      mutate {
        replace => { "syslog_message" => "%{nginx_errmsg}" } 
        remove_field => [ "nginx_errmsg" ]
      }
    }

    if "" in [nginx.core.request] { 
      grok {
        match => { "nginx.request" => "%{BBREQUEST}" }
        add_tag => [ "_request" ]
      }
#      mutate { remove_field => [ "nginx_message" ] }
    }
 
  }
}

output {
  elasticsearch { hosts => ['${ELASTICSEARCH_HOSTS:elasticsearch:9200}'] }
}
