
input {
  pipeline { address => jenkins }
}

filter {
  # tag with name of conf file
  mutate { add_tag => [ "_%{type}" ] }
  mutate { replace => { "type" => 'jenkins' } }

  if [msg3] =~ /jenkins:? - - -/ { 

    if [syslog_message] =~ /"data":/ {
      json {
        tag_on_failure => ["_jenkins.jsonparsefailure"]
        id => "jenkins"
        source => "syslog_message"
        target => "jenkins."
        remove_field => [ "msg3" ]
#        add_tag => [ "_json" ]
      }
    }

    else if "" in [jenkins_message] {
      mutate {
        tag_on_failure => "_jenkins.mutate_error.2"
        replace => { "syslog_message" => "%{jenkins_message}" }
        remove_field => [ "msg3", "jenkins_message" ]
      }
    }
  }

  if [endTime] {
    date {
      tag_on_failure => ["_jenkins.dateparsefailure.1"]
      match => [ "endTime", "UNIX_MS" ]
      target => "ts"
    }
    mutate { remove_field => [ "endTime" ] }
    mutate { rename => { "ts" => "endTime" } }
  }

  if [entryTime] {
    date {
      tag_on_failure => ["_jenkins.dateparsefailure.2"]
      match => [ "entryTime", "UNIX_MS" ]
      target => "ts"
    }
    mutate { remove_field => [ "entryTime" ] }
    mutate { rename => { "ts" => "entryTime" } }
  }

  if [exitTime] {
    date {
      tag_on_failure => ["_jenkins.dateparsefailure.3"]
      match => [ "exitTime", "UNIX_MS" ]
      target => "ts"
    }
    mutate { remove_field => [ "exitTime" ] }
    mutate { rename => { "ts" => "exitTime" } }
  }

  if [startTime] {
    date {
      tag_on_failure => ["_jenkins.dateparsefailure.4"]
      match => [ "startTime", "UNIX_MS" ]
      target => "ts"
    }
    mutate { remove_field => [ "startTime" ] }
    mutate { rename => { "ts" => "startTime" } }
  }

  if "" in [jenkins_timestamp] {
    date {
      tag_on_failure => ["_jenkins.dateparsefailure.5"]
      match => [ "jenkins_timestamp", "MMM dd, yyyy hh:mm:ss a", "ISO8601" ]
      target => "ts"
    }
    mutate { remove_field => [ "jenkins_timestamp" ] }
    mutate { rename => { "ts" => "jenkins_timestamp" } }
  }

#  if "" in [queueCauses] {
#    split { field => "queueCauses" }
#    json {
#      tag_on_failure  => ["_jenkins.jsonparsefailure.1"]
#      id => "jenkins-queueCauses"
#      source => "queueCauses"
#      target => "jenkins.queueCauses"
#      add_tag => [ "_queueCauses", "_json" ]
#      remove_field => [ "queueCauses" ]
#    } 
#  }

}

output {
  elasticsearch { hosts => ['${ELASTICSEARCH_HOSTS:elasticsearch:9200}'] }
}
