
input {
  pipeline { address => other }
}

filter {
  # tag with name of conf file
  mutate { add_tag => [ "other" ] }

  if [syslog_program] in ["containerd", "dockerd", "docker.dockerd"]  {
    kv { 
      tag_on_failure => "_other.kv_filter_error"
      add_tag => [ "_kv" ]
      source => [syslog_message]
      prefix => "%{syslog_program}."
    }
    mutate { remove_field => [ "syslog_message" ] }

    date {
      tag_on_failure => ["_jenkins.dateparsefailure.1"]
      match => [ "containerd.time", "ISO8601" ]
      target => "ts"
    }
    mutate { remove_field => [ "containerd.time" ] }
    mutate { rename => { "ts" => "containerd.time" } }
  }

  if "" in [msg5] {
    mutate {
      tag_on_failure => "_other.mutate_error.1"
      replace => { "syslog_message" => "%{syslog1_message}" }
      remove_field => [ "msg5", "syslog1_message" ]
    }
  }
 
  if "" in [msg6] {
    mutate {
      tag_on_failure => "_other.mutate_error.2"
      replace => { "syslog_message" => "%{syslog1_message}" }
      remove_field => [ "msg6", "syslog1_message" ]
    }
  }

  if "" in [syslog_program] {
    mutate {
      tag_on_failure => "_other.mutate_error.3"
      replace => { "type" => "%{syslog_program}" }
      add_tag => [ "_mutate" ]
    }
  }
}

output {
  elasticsearch { hosts => ['${ELASTICSEARCH_HOSTS:elasticsearch:9200}'] }
}
