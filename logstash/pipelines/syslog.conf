input {
  tcp {
    port => 5514
    type => syslog
    tags => [ "_tcp" ]
  }
  udp {
    port => 5514
    type => syslog
    tags => [ "_udp" ]
  }
}

filter {


  #  ensure new data has correct timezone
  mutate { add_field => [ "received_at", "%{@ts}" ] }
  grok { match => {  "received_at" => "%{TIMESTAMP_ISO8601:tsNoZ}Z" } }
  date {
    timezone => "America/New_York"
    match => ["tsNoZ", "ISO8601"]
  }

  mutate { 
    remove_field => [ "received_at", "tsNoZ" ]
    remove_tag => [ "_grokparsefailure" ]
  }


  if [message] =~ /^(ALL|DEBUG|FINEST|FINER|FILE|CONFIG|INFO|WARNING|SEVERE):/ {
    mutate {
      add_tag => [ "_jenkins_logstash_plugin", "_syslog" ]
      replace => { "type" => "jenkins" } 
    }

if "_grokparsefailure" in [tags] {
  mutate { 
    add_tag => [ "_91" ]
    remove_tag => [ "_grokparsefailure" ]
  }
}
  }

  else if [message] =~ /^\r$/ and [host] == "10.3.1.6" {
    mutate {
      add_tag => [ "_jenkins_logstash_plugin" ]
      replace => { "type" => "jenkins" }
      remove_field => [ "message" ]
    }

if "_grokparsefailure" in [tags] {
  mutate { 
    add_tag => [ "_92" ]
    remove_tag => [ "_grokparsefailure" ]
  }
}
  }

  else {
    grok {
      patterns_dir => ["./patterns"]
      add_tag => [ "_syslog" ]
      match => { "message" => "%{SYSLOGPRI:syslog_pri}(?:\d )?(%{SYSLOGTIMESTAMP:syslog_timestamp1}|%{TIMESTAMP_ISO8601:syslog_timestamp2}) %{SYSLOGHOST:syslog_hostname} %{GREEDYDATA:syslog_message}" }
    }

if "_grokparsefailure" in [tags] {
  mutate { 
    add_tag => [ "_01" ]
    remove_tag => [ "_grokparsefailure" ]
  }
}

    if "" in [syslog_pri] {
      syslog_pri { }
    }

    if "" in [syslog_message] {

      #  decode initial part of msg
      grok {
        patterns_dir => ["./patterns"]
        match => { "syslog_message" => "%{BBSYSLOG}" }
      }

if "_grokparsefailure" in [tags] {
  mutate { 
    add_tag => [ "_02" ]
    remove_tag => [ "_grokparsefailure" ]
  }
}

    }
  }
if "_grokparsefailure" in [tags] {
  mutate { 
    add_tag => [ "_03" ]
    remove_tag => [ "_grokparsefailure" ]
  }
}

}

output {
  if "" in [msg1] {
     pipeline { send_to => nginx_error }
  }
  else if "" in [msg2] {
     pipeline { send_to => nginx_access }
  }
  else if "" in [msg3] {
     pipeline { send_to => jenkins }
  }
  else if "" in [msg4] {
     pipeline { send_to => microk8s }
  }
  else if "" in [msg5] {
     pipeline { send_to => other }
  }
  else if "" in [msg6] {
     pipeline { send_to => other }
  }
  else {
     elasticsearch { hosts => ['${ELASTICSEARCH_HOSTS:elasticsearch:9200}'] }
  }

#  if "_syslog" not in [tags] or "_grokparsefailure" in [tags] {
#    stdout { codec => rubydebug }
#  }
}
