input {
  tcp {
    port => 5514
    type => syslog
    # tag with name of conf file
    tags => [ "_tcp" ]
  }
  udp {
    port => 5514
    type => syslog
    # tag with name of conf file
    tags => [ "_udp" ]
  }
}

filter {

  #  ensure new data has correct timezone
  mutate { add_field => [ "received_at", "%{@ts}" ] }
  grok { match => {  "received_at" => "%{TIMESTAMP_ISO8601:tsNoZ}Z" } }
  date {
    timezone => "America/New_York"
    match => ["tsNoZ", "ISO8601"]
  }
  mutate {
    remove_field => [ "received_at", "tsNoZ" ]
    remove_tag => [ "_grokparsefailure" ]
  }


  # check if event comes from jenkins 'logstash' plugin
  if [message] =~ /^<\d+>/ {
    # split syslog message according to our usual rules
    grok {
      tag_on_failure => ["_syslog.grokparsefailure.1"]
      patterns_dir => ["./patterns"]
      match => { "message" => "%{SYSLOGPRI:syslog_pri}(?:\d )?(%{SYSLOGTIMESTAMP:syslog_timestamp1}|%{TIMESTAMP_ISO8601:syslog_timestamp}) %{SYSLOGHOST:syslog_hostname} %{GREEDYDATA:syslog_message}" }
    }

    #  decode syslog_pri if found
    if "" in [syslog_pri] {
      syslog_pri { }
    }

    #  decode syslog_message if found
    if "" in [syslog_message] {
      grok {
        tag_on_failure => ["_syslog.grokparsefailure.1"]
        patterns_dir => ["./patterns"]
        match => { "syslog_message" => "%{BBSYSLOG}" }
      }
      if "" in [msg1] {
        mutate { add_tag => [ "_msg1" ] }
      }
      else if "" in [msg2] {
        mutate { add_tag => [ "_msg2" ] }
      }
      else if "" in [msg3] {
        mutate { add_tag => [ "_msg3" ] }
      }
      else if "" in [msg4] {
        mutate { add_tag => [ "_msg4" ] }
      }
      else if "" in [msg5] {
        mutate { add_tag => [ "_msg5" ] }
      }
      else if "" in [msg6] {
        mutate { add_tag => [ "_msg6" ] }
      }
    }

    if "" in [syslog_timestamp1] {
      date {
        tag_on_failure => ["_syslog.dateparsefailure.2"]
        match => [ "syslog_timestamp1", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss", "ISO8601" ]
        target => "syslog_timestamp"
        remove_field => [ "syslog_timestamp1" ]
      }
    }
  }

  if "_grokparsefailure" in [tags] {
    mutate { 
      tag_on_failure => "_syslog.mutate_error.3"
      add_tag => [ "_syslog.grokparsefailure" ]
      remove_tag => [ "_grokparsefailure" ]
    }
  }
}

output {
  if "" in [msg1] {
     pipeline { send_to => nginx_error }
  }
  else if "" in [msg2] {
     pipeline { send_to => nginx_access }
  }
  else if "" in [msg3] {
     pipeline { send_to => jenkins }
  }
  else if "" in [msg4] {
     pipeline { send_to => microk8s }
  }
  else if "" in [msg5] {
     pipeline { send_to => other }
  }
  else if "" in [msg6] {
     pipeline { send_to => other }
  }
  else {
     pipeline { send_to => jenkins_log }
  }
}
