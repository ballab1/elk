
input {
  pipeline { address => microk8s }
}

filter {
  # tag with name of conf file
  mutate { add_tag => [ "_%{type}" ] }
  mutate { replace => { "type" => 'microk8s' } }


  if [microk8s_message] =~ /^time=/ { 
    kv {
      tag_on_failure => "_microk8s.kv_filter_error"
#      add_tag => [ "_kv" ]
      trim_value => '"'
      field_split => " "
      value_split => "="
      source => "microk8s_message"
      prefix => "%{syslog_program}."
    }
    mutate {
      tag_on_failure => "_microk8s.mutate_error.1"
      remove_field => [ "microk8s_message", "msg4", "syslog_message" ]
#      add_tag => ["_mutate"]
    }  
  }
  else if [syslog_program] =~ /^microk8s/ { 
    mutate {
      tag_on_failure => "_microk8s.mutate_error.2"
      replace => { "syslog_message" => "%{microk8s_message}" } 
      remove_field => [ "msg4", "microk8s_message" ]
#      add_tag => ["_mutate"]
    }
  }
}

output {
  elasticsearch {
    hosts => ['${ELASTICSEARCH_HOSTS:elasticsearch:9200}']
#    user => logstash_internal
#    password => '123Oleary'
  }
}
